{
  "@context": "http://iiif.io/api/presentation/3/context.json",
  "id": "https://raw.githubusercontent.com/simonckemper/NL-HaNA_iiif_manifests/main/iiif_manifest_4.VELH_8.json",
  "type": "Manifest",
  "label": {
    "nl": [
      "4.VELH_8"
    ]
  },
  "metadata": [
    {
      "label": {
        "nl": [
          "Inventory number, record number and page"
        ]
      },
      "value": {
        "nl": [
          "Manifest description for 4.VELH, 8, 1"
        ]
      }
    },
    {
      "label": {
        "nl": [
          "Record title"
        ]
      },
      "value": {
        "nl": [
          "Kaart van Spitsbergen."
        ]
      }
    },
    {
      "label": {
        "nl": [
          "Date of record"
        ]
      },
      "value": {
        "nl": [
          "0"
        ]
      }
    },
    {
      "label": {
        "nl": [
          "Physical state of record"
        ]
      },
      "value": {
        "nl": [
          "0"
        ]
      }
    },
    {
      "label": {
        "nl": [
          "This records is part of the collection:"
        ]
      },
      "value": {
        "nl": [
          "0"
        ]
      }
    },
    {
      "label": {
        "nl": [
          "This records is classified as:"
        ]
      },
      "value": {
        "nl": [
          "kaart"
        ]
      }
    },
    {
      "label": {
        "nl": [
          "associated organisations"
        ]
      },
      "value": {
        "nl": [
          "{'Staten van Holland en West-Friesland', 'Raad der Koloni\u00ebn in West-Indi\u00eb', 'Kamer Zeeland', 'Commissie Bepaling Lengte op Zee Verbetering v. Zeekaarten', 'Oud Archief Suriname: Gouvernementssecretarie', 'Comit\u00e9 tot de Oost-Indische Handel en Bezittingen', 'Verenigde Oostindische Compagnie', 'Algemene Directie', 'Departement van de Equipage', 'Directie ad interim voor de Westindische Koloni\u00ebn', 'Depot-Generaal van Oorlog', 'Raad der Amerikaanse Bezittingen en Etablissementen', 'Directie van de Soci\u00ebteit van Berbice', 'College ter Admiraliteit te Amsterdam', 'Westindische Compagnie', 'Ministerie van Marine en Koloni\u00ebn', 'Comit\u00e9 tot de Zaken Koloni\u00ebn en Bezittingen op de Kust Guinea en in Amerika', 'Directie van de Soci\u00ebteit van Suriname', 'Raad der Aziatische Bezittingen en Etablissementen', 'Ministerie van Koophandel en Koloni\u00ebn', 'Kamer Amsterdam', 'Hollandse Divisie'}"
        ]
      }
    },
    {
      "label": {
        "nl": [
          "associated families"
        ]
      },
      "value": {
        "nl": [
          "[]"
        ]
      }
    }
  ],
  "items": [
    {
      "id": "https://service.archief.nl/iip/f8/1e/37/24/47/20/42/5d/b8/f2/7b/95/77/dd/80/4a/7419fd43-ebe1-444f-a0ad-f08710e72541.jp2/info.json/canvas/p1",
      "type": "Canvas",
      "height": 9058,
      "width": 6538,
      "metadata": [
        {
          "label": {
            "nl": [
              "download original image"
            ]
          },
          "value": {
            "nl": [
              "https://service.archief.nl/gaf/api/file/v1/default/7419fd43-ebe1-444f-a0ad-f08710e72541"
            ]
          }
        }
      ],
      "items": [
        {
          "id": "https://service.archief.nl/iip/f8/1e/37/24/47/20/42/5d/b8/f2/7b/95/77/dd/80/4a/7419fd43-ebe1-444f-a0ad-f08710e72541.jp2/info.json/canvas/p1/annotation",
          "type": "AnnotationPage",
          "items": [
            {
              "id": "https://service.archief.nl/iip/f8/1e/37/24/47/20/42/5d/b8/f2/7b/95/77/dd/80/4a/7419fd43-ebe1-444f-a0ad-f08710e72541.jp2/info.json/canvas/p1/annotation/1",
              "type": "Annotation",
              "motivation": "painting",
              "body": {
                "id": "https://service.archief.nl/iipsrv?IIIF=/80/7419fd43-ebe1-444f-a0ad-f08710e72541\\.jp2/full/full/0/default\\.jp2",
                "type": "Image",
                "format": "image/jpeg",
                "height": 9058,
                "width": 6538,
                "service": [
                  {
                    "id": "https://service.archief.nl/iipsrv?IIIF=/f8/1e/37/24/47/20/42/5d/b8/f2/7b/95/77/dd/80/4a/7419fd43-ebe1-444f-a0ad-f08710e72541.jp2",
                    "type": "ImageService3",
                    "profile": "level1"
                  }
                ]
              },
              "target": "https://service.archief.nl/iip/f8/1e/37/24/47/20/42/5d/b8/f2/7b/95/77/dd/80/4a/7419fd43-ebe1-444f-a0ad-f08710e72541.jp2/info.json/canvas/p1"
            }
          ]
        }
      ]
    }
  ]
}